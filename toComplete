Programming:

 5 points: Make a simple GUI so that the user is typing into a nicer interface and
can view a recent history of the conversation.
 2 points: Add an extra topic to your agent's repertoire. Ensure this topic has
similarities with the original topic. For example, if your original topic is
volleyball, you may want to add basketball as a second topic.
 3 points: Add a feature that enables your agent to give at least 5 different
reasonable responses when the user enters something outside the two topics.
 5 points: Add a feature that enables your agent to handle spelling mistakes of
the words that your agent is supposed to recognize. Do not hardcode your
solution. Develop a general feature you can use for all the words your agent
has, rather than hardcoding a bunch of possible mistakes people could make.
For example, use the Porter Stemmer, or some other pre-established algorithm.
 10 points each: Use of language toolkits, incorporate feature to improve your
conversation's flow:
o Synonym recognition - WordNet (you'll need a Java API to it)
o POS tagging - Stanford toolkit, OpenNLP
o Named entity recognition - Stanford toolkit, OpenNLP
o Phrasal - Stanford toolkit
o Coreference Resolution - Stanford toolkit, OpenNLP
o Sentiment analysis tools - Stanford toolkit
 15 points: Conversation with another agent (built by a student in this class) via
sockets


Documentation:

 2 points: README file in your repository describing what you've done. You
are likely to just add onto the README file from A2 in this case. If you've
changed a lot since A2, you will have to rewrite the README so it reflects
your current submission.
 5 points: At the end of your README file, include:
o a list of each feature you programmed for this assignment
o for each item on that list, explain briefly how you used that feature to
improve your agent's conversation or your overall system
o for each explanation, give a snippet of a conversation that demonstrates
your feature
 3 points: Provide a Level 0 DFD for your system with description.
 5 points: Provide a Level 1 DFD for your system with description.
 5 points: Submission of your GitHub repository. Graph showing different
features developed on a separate branch and the commits made in the
repository.
 5 points: Include sample output in your project report. Have one dialogue (at
least 30 turns) that show a good or feasible conversation -- ensure your new
features are demonstrated! Document a list of limitations of your program, and
have at least two short dialogues that show when your agent is not able to
handle the conversation properly.
 5 points: Based on your system, include a list of at least 5 features that you can
extract from your code or design that can be shared with others as an API.


Video:

A brief description of your program's conversational topic
 Each feature you've programmed and how you used it to improve either the
conversation or the overall system (since A2)
 A description of your DFDs
 You should narrate and/or provide subtitles
